
!function ($) {
    "use strict";

    var SweetAlert = function () { };

    //examples 
    SweetAlert.prototype.init = function () {

        //Basic
        $('#sa-basic').click(function () {
            Swal.fire("Here's a message!");
        });

        //A title with a text under
        $('#sa-title').click(function () {
            Swal.fire("Here's a message!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.")
        });

        //Success Message
        $('#sa-success').click(function () {
            Swal.fire("Good job!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.", "success")
        });

        //Warning Message
        $('#sa-warning').click(function () {
            Swal.fire({
                title: "Are you sure?",
                text: "You will not be able to recover this imaginary file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            }, function () {
                swal("Deleted!", "Your imaginary file has been deleted.", "success");
            });
        });

        //Custom Image
        $('#sa-image').click(function () {
            Swal.fire({
                title: "Govinda!",
                text: "Recently joined twitter",
                imageUrl: "../assets/images/users/2.jpg"
            });
        });

        //Auto Close Timer
        $('#sa-close').click(function () {
            Swal.fire({
                title: "Auto close alert!",
                text: "I will close in 2 seconds.",
                timer: 2000,
                showConfirmButton: false
            });
        });

        $("#model-error-icon").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
                footer: '<a href>Why do I have this issue?</a>'
            })
        });

        $("#model-merge0").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'After you merge these profiles, This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Continue",
                closeOnConfirm: false
            })
        });

        $("#model-merge1").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are merging “Shakir Ansari (PTID 12)" into ”Shakir Ansari (PTID 13) from Practice Patient Profile Database”. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Continue",
                closeOnConfirm: false
            })
        });

        $("#model-merge2").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are merging “Shakir Ansari (PTID 12)" into ”Shakir Ansari (PTID 13) from Practice Patient Profile Database”. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Continue",
                closeOnConfirm: false
            })
        });

        $("#model-merge3").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are merging “Shakir Ansari (PTID 12)" into ”Shakir Ansari (PTID 13) from Practice Patient Profile Database”. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Continue",
                closeOnConfirm: false
            })
        });

        $("#stage-jump0").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'you want to jump shakir Ansari (11/06/2020 4:14 PM) to MGR?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Jump",
                closeOnConfirm: false
            })
        });

        $("#stage-jump1").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'you want to jump shakir Ansari (11/06/2020 4:14 PM) to Superbill Submitted?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Jump",
                closeOnConfirm: false
            })
        });

        $("#stage-jump2").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'you want to jump shakir Ansari (11/06/2020 4:14 PM) to Payment Recieved?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Jump",
                closeOnConfirm: false
            })
        });

        $("#stage-jump3").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'you want to jump shakir Ansari (11/06/2020 4:14 PM) to CheckOut?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Jump",
                closeOnConfirm: false
            })
        });

        $("#delete_request").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'you want to delete this request?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Delete",
                closeOnConfirm: false
            })
        });

        $("#cheque-refund").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are about to refund $356, Check #2354. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Refund",
                closeOnConfirm: false
            })
        });

        $("#cash-refund").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are about to refund $35 in cash. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Refund",
                closeOnConfirm: false
            })
        });

        $("#card-refund").click(function () {
            Swal.fire({
                type: 'error',
                title: 'Are You Sure....',
                text: 'You are about to refund $45 back to card ending in XX2345. This cannot be undone. Are you sure you want to continue?',
                
                showCancelButton: true,
                confirmButtonColor: "#00c292",
                confirmButtonText: "Refund",
                closeOnConfirm: false
            })
        });

        $("#sa-html").click(function () {
            Swal.fire({
                title: '<strong>HTML <u>example</u></strong>',
                type: 'info',
                html:
                    'You can use <b>bold text</b>, ' +
                    '<a href="//github.com">links</a> ' +
                    'and other HTML tags',
                showCloseButton: true,
                showCancelButton: true,
                focusConfirm: false,
                confirmButtonText:
                    '<i class="fa fa-thumbs-up"></i> Great!',
                confirmButtonAriaLabel: 'Thumbs up, great!',
                cancelButtonText:
                    '<i class="fa fa-thumbs-down"></i>',
                cancelButtonAriaLabel: 'Thumbs down',
            })
        });

        $("#sa-position").click(function () {
            Swal.fire({
                position: 'top-end',
                type: 'success',
                title: 'Your work has been saved',
                showConfirmButton: false,
                timer: 1500
            })
        });

        $("#sa-animation").click(function () {
            Swal.fire({
                title: 'Custom animation with Animate.css',
                animation: false,
                customClass: {
                    popup: 'animated tada'
                }
            })
        });

        $("#sa-confirm").click(function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )
                }
            })
        });

        $("#pendingtransferAccept").click(function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to accept ownership of this location. Please be aware you will be responsible for any costs associated with this location. Press Accept to Continue.",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#00c292',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Accept'
            }).then((result) => {
                if (result.value) {
                    Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )
                }
            })
        });

        $("#pendingtransferReject").click(function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to reject the ownership transfer",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#00c292',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Reject'
            }).then((result) => {
                if (result.value) {
                    Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )
                }
            })
        });

        $("#plocationmgtTransfer").click(function () {
            Swal.mixin({
                input: 'text',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
          title: 'Email Address', 
          input: 'text',
          inputPlaceholder: "Email Address"
        },
        {
          text: 'You are about to start the transfer of ownership of this location to another user. Please be aware after the transfer is complete this account will not have any rights to that location.'
        },
        { 
          text: 'The transfer request will be sent to the RTP team for quality assurance. You will be notified when it is approved',
        }, 
  
      ]
  
      swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
          title: 'All done!',
          html:
            'Your answers: <pre>' +
              (result) +
            '</pre>',
          confirmButtonText: 'Lovely!',
          showCancelButton: false
        })
      }, function () {
        swal.resetDefaults()
      })
      });

      $("#requestAccess").click(function () {
          Swal.mixin({
              input: 'text',
              confirmButtonText: 'Next &rarr;',
              showCancelButton: true,
              progressSteps: ['1']
          })
          var steps = [
      {
        title: 'Enter Access Code', 
        input: 'text',
        inputPlaceholder: "Enter Access Code"
      }

    ]

    swal.queue(steps).then(function (result) {
      swal.resetDefaults()
      swal({
        title: 'All done!',
        html:
          'Your answers: <pre>' +
            (result) +
          '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
      })
    }, function () {
      swal.resetDefaults()
    })
    });

    $(".viewCode").click(function () {
        Swal.mixin({
            input: 'text',
            confirmButtonText: 'Next &rarr;',
            showCancelButton: true,
            progressSteps: ['1']
        })
        var steps = [
    {
      title: 'Code', 
      html:
        '<h1>4thgCH</h1>',
    }

  ]

  swal.queue(steps).then(function (result) {
    swal.resetDefaults()
    swal({
      title: 'All done!',
      html:
        'Your answers: <pre>' +
          (result) +
        '</pre>',
      confirmButtonText: 'Lovely!',
      showCancelButton: false
    })
  }, function () {
    swal.resetDefaults()
  })
  });

  $(".codeMailed").click(function () {
    Swal.fire({
        title: 'Are you sure?',
        text: "You want to update?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#00c292',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes'
    }).then((result) => {
        if (result.value) {
            Swal.fire(
                'Updated!',
                'Location has been updated',
                'success'
            )
        }
    })
});


  $(".resendCode").click(function () {
    Swal.mixin({
        input: 'text',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: 'Verification Code', 
    text:"",
    html:
    'A Verification Code has been sent to you email',
},
{ 
    type: 'success',
    title: 'Sent',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
    title: 'All done!',
    html:
    'Your answers: <pre>' +
        (result) +
    '</pre>',
    confirmButtonText: 'Lovely!',
    showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});
  

  $(".verifyFax").click(function () {
    Swal.mixin({
        input: 'text',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: 'Verification Code', 
    text:"",
    html:
    'Confirmation Number has been sent to your Fax Number. When you receive it;<br/><br/>' +
    '<p>01. Login to the portal.</p>'+
    '<p>02. Navigate to "Listings".</p>'+ 
    '<p>03. Add the Code to the listing".</p>',
    inputPlaceholder: "Email Address",
    showCancelButton: true,
    confirmButtonColor: "#00c292",
    cancelButtonColor: '#d33',
    confirmButtonText: "Okay",
    closeOnConfirm: false,
},
{ 
    type: 'success',
    title: 'Sent',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
    title: 'All done!',
    html:
    'Your answers: <pre>' +
        (result) +
    '</pre>',
    confirmButtonText: 'Lovely!',
    showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});

$(".verifyAdd").click(function () {
Swal.mixin({
    input: 'text',
    confirmButtonText: 'Next &rarr;',
    showCancelButton: true,
    progressSteps: ['1', '2']
})
var steps = [
{
title: 'Verification Code', 
text:"",
html:
'Confirmation Number has been sent to your Address. When you receive it;<br/><br/>' +
'<p>01. Login to the portal.</p>'+
'<p>02. Navigate to "Listings".</p>'+ 
'<p>03. Add the Code to the listing".</p>',
inputPlaceholder: "Email Address",
showCancelButton: true,
confirmButtonColor: "#00c292",
cancelButtonColor: '#d33',
confirmButtonText: "Okay",
closeOnConfirm: false,
},
{ 
type: 'success',
title: 'Sent',
showConfirmButton: false,
timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
title: 'All done!',
html:
'Your answers: <pre>' +
    (result) +
'</pre>',
confirmButtonText: 'Lovely!',
showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});

        $("#sa-passparameter").click(function () {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'mr-2 btn btn-danger'
                },
                buttonsStyling: false,
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    swalWithBootstrapButtons.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )
                } else if (
                    // Read more about handling dismissals
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your imaginary file is safe :)',
                        'error'
                    )
                }
            })
        });

        $("#sa-bg").click(function () {
            Swal.fire({
                title: 'Custom width, padding, background.',
                width: 600,
                padding: '3em',
                background: '#fff url(../assets/images/background/active-bg.png)',
                backdrop: `
                        rgba(0,0,123,0.4)
                        url("../assets/images/background/nyan-cat.gif")
                        center left
                        no-repeat
                    `
            })
        });

        $("#sa-autoclose").click(function () {
            let timerInterval
            Swal.fire({
                title: 'Auto close alert!',
                html: 'I will close in <strong></strong> seconds.',
                timer: 2000,
                onBeforeOpen: () => {
                    Swal.showLoading()
                    timerInterval = setInterval(() => {
                        Swal.getContent().querySelector('strong')
                            .textContent = Swal.getTimerLeft()
                    }, 100)
                },
                onClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                if (
                    // Read more about handling dismissals
                    result.dismiss === Swal.DismissReason.timer
                ) {
                    console.log('I was closed by the timer')
                }
            })
        });

        $("#sa-rtl").click(function () {
            Swal.fire({
                title: 'هل تريد الاستمرار؟',
                type: 'question',
                customClass: {
                    icon: 'swal2-arabic-question-mark'
                },
                confirmButtonText: 'نعم',
                cancelButtonText: 'لا',
                showCancelButton: true,
                showCloseButton: true
            })
        });

        $("#sa-ajax").click(function () {
            Swal.fire({
                title: 'Submit your Github username',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'Look up',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(`//api.github.com/users/${login}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            return response.json()
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: `${result.value.login}'s avatar`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })
        });

        $("#email").click(function () {
            Swal.fire({
                title: 'Email Address',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'Invite',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(`//api.github.com/users/${login}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            return response.json()
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: `${result.value.login}'s avatar`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })
        });

        $("#emailv2").click(function () {
            Swal.fire({
                title: 'Email Address',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'Invite',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(`//api.github.com/users/${login}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            return response.json()
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: `${result.value.login}'s avatar`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })
        });

        $("#StepnameInput").click(function () {
            Swal.fire({
                title: 'Add Visit Type',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'Add Visit',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(`//api.github.com/users/${login}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            return response.json()
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: `${result.value.login}'s avatar`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })
        });

        $("#StagenameInput").click(function () {
            Swal.fire({
                title: 'Add Stage',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'Add Stage',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(`//api.github.com/users/${login}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            return response.json()
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: `${result.value.login}'s avatar`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })
        });

        $("#sa-chain").click(function () {
            Swal.mixin({
                input: 'text',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2', '3']
            }).queue([
                {
                    title: 'Question 1',
                    text: 'Chaining swal2 modals is easy'
                },
                'Question 2',
                'Question 3'
            ]).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: 'All done!',
                        html:
                            'Your answers: <pre><code>' +
                            JSON.stringify(result.value) +
                            '</code></pre>',
                        confirmButtonText: 'Lovely!'
                    })
                }
            })
        });

        $("#sa-queue").click(function () {
            const ipAPI = 'https://api.ipify.org?format=json'

            Swal.queue([{
                title: 'Your public IP',
                confirmButtonText: 'Show my public IP',
                text:
                    'Your public IP will be received ' +
                    'via AJAX request',
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    return fetch(ipAPI)
                        .then(response => response.json())
                        .then(data => Swal.insertQueueStep(data.ip))
                        .catch(() => {
                            Swal.insertQueueStep({
                                type: 'error',
                                title: 'Unable to get your public IP'
                            })
                        })
                }
            }])
        });

        //Active Users Start
        $("#auResetEmail").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to reset this email?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Reset it!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Reset Successful',
            showConfirmButton: false,
            timer: 1500,
        }, 
  
      ]
  
      swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
          title: 'All done!',
          html:
            'Your answers: <pre>' +
              (result) +
            '</pre>',
          confirmButtonText: 'Lovely!',
          showCancelButton: false
        })
      }, function () {
        swal.resetDefaults()
      })
      });

        $("#auResetPassword").click(function () {
        Swal.mixin({
            input: 'select',
            confirmButtonText: 'Next &rarr;',
            showCancelButton: true,
            progressSteps: ['1', '2']
        })
        var steps = [
    {
        title: "Are you sure...",
        text: "You want to reset this password?",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, Reset it!",
        closeOnConfirm: false,
    },
    { 
        type: 'success',
        title: 'Reset Successful',
        showConfirmButton: false,
        timer: 1500,
    }, 

  ]

  swal.queue(steps).then(function (result) {
    swal.resetDefaults()
    swal({
      title: 'All done!',
      html:
        'Your answers: <pre>' +
          (result) +
        '</pre>',
      confirmButtonText: 'Lovely!',
      showCancelButton: false
    })
  }, function () {
    swal.resetDefaults()
  })
  });
        
        $("#auInactive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to send this user to inactive?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Inactive!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Inactivated',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });
        
        $("#auActive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to send this user to active?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#00c292",
            confirmButtonText: "Active!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Activated',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });
  
        //Active Users End

        //Inactive Users Start
        $("#inactiveUsersActive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to send this user to active?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#00c292",
            confirmButtonText: "Active!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Activated',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });
        //Inactive Users End

        //Pending Users Start
        $("#pendingUserApprove").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "RTPC ID",
            input: "text",
            showCancelButton: true,
            confirmButtonColor: "#00c292",
            confirmButtonText: "Approve!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Approved',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });
        //Pending Users End

        //Pending Practice Start
        $("#pendingPracticeApprove").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "RTP ID",
            input: "text",
            showCancelButton: true,
            confirmButtonColor: "#00c292",
            confirmButtonText: "Approve!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Approved',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });

        //Pending Practice End

        //Inactive Practice Start

        $("#inactivePracticeActive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to send this practice to active?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#00c292",
            confirmButtonText: "Active!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Activated',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });

        $("#inactivePracticeinactive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to send this practice to inactive?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Inactive!",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Inactivated',
            showConfirmButton: false,
            timer: 1500,
        }, 

        ]

        swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
        }, function () {
        swal.resetDefaults()
        })
        });

        //Inactive Practice End

        //Subscription Start
        $("#subscriptionArchive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to archive this user?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Archive",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Archive Successful',
            showConfirmButton: false,
            timer: 1500,
        }, 
  
      ]
  
      swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
          title: 'All done!',
          html:
            'Your answers: <pre>' +
              (result) +
            '</pre>',
          confirmButtonText: 'Lovely!',
          showCancelButton: false
        })
      }, function () {
        swal.resetDefaults()
      })
      });

      
        $(".clientuserArchive").click(function () {
            Swal.mixin({
                input: 'select',
                confirmButtonText: 'Next &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2']
            })
            var steps = [
        {
            title: "Are you sure...",
            text: "You want to archive this user?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Archive",
            closeOnConfirm: false,
        },
        { 
            type: 'success',
            title: 'Archive Successful',
            showConfirmButton: false,
            timer: 1500,
        }, 

    ]

    swal.queue(steps).then(function (result) {
        swal.resetDefaults()
        swal({
        title: 'All done!',
        html:
            'Your answers: <pre>' +
            (result) +
            '</pre>',
        confirmButtonText: 'Lovely!',
        showCancelButton: false
        })
    }, function () {
        swal.resetDefaults()
    })
    });   

    $(".clientuserInactive").click(function () {
        Swal.mixin({
            input: 'select',
            confirmButtonText: 'Next &rarr;',
            showCancelButton: true,
            progressSteps: ['1', '2']
        })
        var steps = [
    {
        title: "Are you sure...",
        text: "You want to Inactivate this user?",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Inactivate",
        closeOnConfirm: false,
    },
    { 
        type: 'success',
        title: 'Inactivated',
        showConfirmButton: false,
        timer: 1500,
    }, 

]

swal.queue(steps).then(function (result) {
    swal.resetDefaults()
    swal({
    title: 'All done!',
    html:
        'Your answers: <pre>' +
        (result) +
        '</pre>',
    confirmButtonText: 'Lovely!',
    showCancelButton: false
    })
}, function () {
    swal.resetDefaults()
})
});

    $(".clientuserInactive").click(function () {
        Swal.mixin({
            input: 'select',
            confirmButtonText: 'Next &rarr;',
            showCancelButton: true,
            progressSteps: ['1', '2']
        })
        var steps = [
    {
        title: "Are you sure...",
        text: "You want to Inactivate this user?",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Inactivate",
        closeOnConfirm: false,
    },
    { 
        type: 'success',
        title: 'Inactivated',
        showConfirmButton: false,
        timer: 1500,
    }, 

]

swal.queue(steps).then(function (result) {
    swal.resetDefaults()
    swal({
    title: 'All done!',
    html:
        'Your answers: <pre>' +
        (result) +
        '</pre>',
    confirmButtonText: 'Lovely!',
    showCancelButton: false
    })
}, function () {
    swal.resetDefaults()
})
});

$(".clientuserActive").click(function () {
    Swal.mixin({
        input: 'select',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: "Are you sure...",
    text: "You want to activate this user?",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#00c292",
    confirmButtonText: "Activate",
    closeOnConfirm: false,
},
{ 
    type: 'success',
    title: 'Activated',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
title: 'All done!',
html:
    'Your answers: <pre>' +
    (result) +
    '</pre>',
confirmButtonText: 'Lovely!',
showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});

$(".clientuserResend").click(function () {
    Swal.mixin({
        input: 'select',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: "Are you sure...",
    text: "You want to resend invite to this user?",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#00c292",
    confirmButtonText: "Resend",
    closeOnConfirm: false,
},
{ 
    type: 'success',
    title: 'invitation Sent',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
title: 'All done!',
html:
    'Your answers: <pre>' +
    (result) +
    '</pre>',
confirmButtonText: 'Lovely!',
showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});

$(".reviewDelete").click(function () {
    Swal.mixin({
        input: 'select',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: "Are you sure...",
    text: "You want to Delete this review?",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#DD6B55",
    confirmButtonText: "Delete",
    closeOnConfirm: false,
},
{ 
    type: 'success',
    title: 'Deleted',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
title: 'All done!',
html:
    'Your answers: <pre>' +
    (result) +
    '</pre>',
confirmButtonText: 'Lovely!',
showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});

$(".reviewUnreport").click(function () {
    Swal.mixin({
        input: 'select',
        confirmButtonText: 'Next &rarr;',
        showCancelButton: true,
        progressSteps: ['1', '2']
    })
    var steps = [
{
    title: "Are you sure...",
    text: "This is where the message will go that the user put.",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#00c292",
    confirmButtonText: "Unreport",
    closeOnConfirm: false,
},
{ 
    type: 'success',
    title: 'Unreported',
    showConfirmButton: false,
    timer: 1500,
}, 

]

swal.queue(steps).then(function (result) {
swal.resetDefaults()
swal({
title: 'All done!',
html:
    'Your answers: <pre>' +
    (result) +
    '</pre>',
confirmButtonText: 'Lovely!',
showCancelButton: false
})
}, function () {
swal.resetDefaults()
})
});
        //Subscription Users End

        $("#sa-timerfun").click(function () {
            let timerInterval
            Swal.fire({
                title: 'Auto close alert!',
                html:
                    'I will close in <strong></strong> seconds.<br/><br/>' +
                    '<button id="increase" class="btn btn-warning">' +
                    'I need 5 more seconds!' +
                    '</button><br/>' +
                    '<button id="stop" class="btn btn-danger mt-1">' +
                    'Please stop the timer!!' +
                    '</button><br/>' +
                    '<button id="resume" class="btn btn-success mt-1" disabled>' +
                    'Phew... you can restart now!' +
                    '</button><br/>' +
                    '<button id="toggle" class="btn btn-primary mt-1">' +
                    'Toggle' +
                    '</button>',
                timer: 10000,
                onBeforeOpen: () => {
                    const content = Swal.getContent()
                    const $ = content.querySelector.bind(content)

                    const stop = $('#stop')
                    const resume = $('#resume')
                    const toggle = $('#toggle')
                    const increase = $('#increase')

                    Swal.showLoading()

                    function toggleButtons() {
                        stop.disabled = !Swal.isTimerRunning()
                        resume.disabled = Swal.isTimerRunning()
                    }

                    stop.addEventListener('click', () => {
                        Swal.stopTimer()
                        toggleButtons()
                    })

                    resume.addEventListener('click', () => {
                        Swal.resumeTimer()
                        toggleButtons()
                    })

                    toggle.addEventListener('click', () => {
                        Swal.toggleTimer()
                        toggleButtons()
                    })

                    increase.addEventListener('click', () => {
                        Swal.increaseTimer(5000)
                    })

                    timerInterval = setInterval(() => {
                        Swal.getContent().querySelector('strong')
                            .textContent = (Swal.getTimerLeft() / 1000)
                                .toFixed(0)
                    }, 100)
                },
                onClose: () => {
                    clearInterval(timerInterval)
                }
            })
        });
    },
        //init
        $.SweetAlert = new SweetAlert, $.SweetAlert.Constructor = SweetAlert
}(window.jQuery),

    //initializing 
    function ($) {
        "use strict";
        $.SweetAlert.init()
    }(window.jQuery);